paths:
  api/v1/user:
    post:
      summary: Create a new user
      description: Adds a new user to the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  example: John
                lastName:
                  type: string
                  example: Doe
                email:
                  type: string
                  example: john.doe@example.com
                mobile:
                  type: string
                  example: '+1234567890'
                password:
                  type: string
                  example: 'password123'
                role:
                  type: string
                  example: USER
      responses:
        201:
          description: User created successfully.
        403:
          description: Invalid request body properties.
        500:
          description: Internal server error.

    get:
      summary: Get all users
      description: Retrieves a list of all users.
      responses:
        200:
          description: A list of users.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    firstName:
                      type: string
                      example: John
                    lastName:
                      type: string
                      example: Doe
                    email:
                      type: string
                      example: john.doe@example.com
                    mobile:
                      type: string
                      example: '+1234567890'

  api/v1/user/{id}:
    get:
      summary: Get a single user
      description: Retrieves a user by their ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: User retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  firstName:
                    type: string
                    example: John
                  lastName:
                    type: string
                    example: Doe
                  email:
                    type: string
                    example: john.doe@example.com
                  mobile:
                    type: string
                    example: '+1234567890'
        404:
          description: User not found.

    put:
      summary: Update a user
      description: Updates a user's details.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  example: John
                lastName:
                  type: string
                  example: Doe
                email:
                  type: string
                  example: john.doe@example.com
                mobile:
                  type: string
                  example: '+1234567890'
      responses:
        200:
          description: User updated successfully.
        404:
          description: User not found.

    delete:
      summary: Delete a user
      description: Deletes a user by their ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: User deleted successfully.
        404:
          description: User not found.
        403:
          description: Forbidden (e.g., trying to delete an admin).
